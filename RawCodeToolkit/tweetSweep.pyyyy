__author__ = 'gnarlywhale'

import tweepy
import datetime
import calendar
import time
import nltk, MySQLdb
consumer_key = '4Mp6ti3sr21bVvzfYOCo3Q'
consumer_secret = 'JHjKExPm2RVtIXPdtklqZWfVDFfNq9ahF78OZ4zk'
access_token = '218005288-FoRxftZkDUxqtj4yBRlaubVVpE3rTa6TN4pxc2vk'
access_token_secret = 'INJfXEFUGqU0e7xXQ9zFEA73v1AaV30C6O0cOZACY4iSJ'

auth = tweepy.OAuthHandler(consumer_key, consumer_secret)
auth.set_access_token(access_token, access_token_secret)

api = tweepy.API(auth)

db = MySQLdb.connect(host="localhost", user="wallstweet", db="wallstweet")
cur = db.cursor()

timespan = datetime.datetime.utcnow()
print(timespan)
#timespan = timespan - datetime.timedelta(seconds=30)
timespan = timespan - datetime.timedelta(days=30)


status = api.rate_limit_status()

# Determine if we're at our limit
limit = status['resources']['search']['/search/tweets']['remaining']
if(limit == 0):
    resetTime = int(status['resources']['search']['/search/tweets']['reset'])
    time.sleep(resetTime - calendar.timegm(datetime.datetime.utcnow().utctimetuple()) + 10)

for tweet in tweepy.Cursor(api.search, q="Microsoft", rpp=100, include_entities=True, lang="en").items():
    if(limit <= 5):
        status = api.rate_limit_status()
        limit = status['resources']['search']['/search/tweets']['remaining']
        if(limit <= 5):
            resetTime = int(status['resources']['search']['/search/tweets']['reset'])
            print("Sleeping for {0}!".format(resetTime - calendar.timegm(datetime.datetime.utcnow().utctimetuple()) + 10))
            time.sleep(resetTime - calendar.timegm(datetime.datetime.utcnow().utctimetuple()) + 10)

    huzzah = tweet.text.encode('ascii','ignore').replace('"', '\\"').replace('\\', '\\\\')

    cur.execute("INSERT IGNORE INTO tweet_dataset (id, text, time) VALUES (%d, %s, %s)", [tweet.id,huzzah,tweet.created_at]))
    db.commit()
    print("INSERTED: {2} {0} {1}".format(tweet.id,huzzah,str(tweet.created_at)))

    if tweet.created_at < timespan:
        break

    limit -= 1
    time.sleep(0.25)

cur.close()

print(timespan)
#if (tweettime <timespan):
#    print("tweettime less")
#else:
#    print("tweettime more")
